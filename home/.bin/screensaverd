#!/usr/bin/env bash
# packages required:
# 1. xprintidle
# 2. xsecurelock

# In minutes
IDLE_TRESHOLD=5
LOGOUT_TRESHOLD=10

treshhold_millis=$((IDLE_TRESHOLD * 60 * 1000))
logout_millis=$((LOGOUT_TRESHOLD * 60 * 1000))

IS_ASLEEP=false
CAFFEINE_FILE=$HOME/.cache/caffeine
LOCK_FILE=$HOME/.cache/screen.lock

LID_FILE=/proc/acpi/button/lid/LID0/state

function lock_screen() {
    [[ -f $LOCK_FILE ]] && return 1
    touch $LOCK_FILE
    XSECURELOCK_PASSWORD_PROMPT='asterisks' xsecurelock
    rm $LOCK_FILE
}

rm $LOCK_FILE
while true; do
    sleep 10
    LID_STATE=$(cat $LID_FILE | awk '{print $2}')

    if [[ "$LID_STATE" == "closed" ]];then
       lock_screen &
       sleep 1
       [[ -f $CAFFEINE_FILE ]] || systemctl suspend
       continue
    fi

    if [[ -f $CAFFEINE_FILE ]]; then
        IS_ASLEEP=false
        rm $LOCK_FILE
        continue
    fi

    IDLE=$(xprintidle)

    SHOULD_BE_ASLEEP=false
    if [[ $IDLE -ge $treshhold_millis ]]; then
        SHOULD_BE_ASLEEP=true
    else
        IS_ASLEEP=false
    fi

    if [[ "$SHOULD_BE_ASLEEP" == "true" && "$IS_ASLEEP" == "false" ]]; then
        IS_ASLEEP=true
        echo "Going to sleep"
        xset dpms force off
    fi

    if [[ $IS_ASLEEP == "true" && $IDLE -gt $logout_millis && ! -f $LOCK_FILE ]]; then
        echo "Going to logout"
        lock_screen &
    fi
done
